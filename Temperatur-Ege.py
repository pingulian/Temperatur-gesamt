import numpy as np
import sympy
import matplotlib.pyplot as plt
c=False
Daten1=np.array([23.79,23.64,23.44,23.20,22.96,22.81,22.56,22.39,22.13,21.73,21.50,21.36,21.05,20.81,20.78,20.67,20.47,20.35,20.15,20.03,19.85,19.71,19.51,19.29,19.17,19.02,18.71,18.48,18.25,18.06,17.91,17.68,17.46,17.26,17.10,16.85,16.72,16.60,16.40,16.24,16.06,15.98,15.77,15.69,15.61,15.46,15.35,15.34,15.24,15.13,15.04,14.93,14.83,14.71,14.60,14.53,14.48,14.39,14.27,14.16,14.04,14.00,13.85,13.74,13.63,13.52,13.44,13.34,13.21,13.09,12.96,12.86,12.71,12.58,12.51,12.40,12.22,12.11,11.96,11.84,11.71,11.56,11.45,11.34,11.26,11.20,11.18,11.13,11.10,11.07,11.01,10.92,10.83,10.72,10.64,10.54,10.48,10.42,10.39,10.33,10.34,10.31,10.27,10.23,10.19,10.08,9.96,9.86,9.83,9.80,9.76,9.76,9.72,9.68,9.65,9.60,9.58,9.53,9.50,9.48,9.44,9.39,9.33,9.24,9.22,9.20,9.16,9.09,9.03,8.96,8.92,8.85,8.80,8.78,8.74,8.70,8.64,8.57,8.52,8.52,8.48,8.46,8.41,8.38,8.37,8.34,8.31,8.30,8.25,8.20,8.14,8.08,8.04,8.01,7.97,7.95,7.91,7.88,7.81,7.77,7.74,7.73,7.70,7.63,7.63,7.59,7.55,7.54,7.50,7.46,7.43,7.40,7.37,7.34,7.32,7.30,7.26,7.20,7.16,7.14,7.10,7.06,7.01,6.96,6.95,6.92,6.89,6.89,6.86,6.82,6.81,6.78,6.76,6.76,6.72,6.69,6.67,6.63,6.59,6.55,6.52,6.50,6.46,6.43,6.39,6.36,6.33,6.29,6.28,6.25,6.24,6.23,6.21,6.17,6.17,6.15,6.13,6.12,6.11,6.09,6.08,6.02,5.97,5.98,5.96,5.94,5.90,5.89,5.89,5.86,5.86,5.86,5.85,5.82,5.81,5.82,5.81,5.80,5.78,5.77,5.76,5.76,5.74,5.74,5.73,5.72,5.72,5.70,5.69,5.67,5.65,5.61,5.58,5.58,5.57,5.55,5.51,5.50,5.50,5.48,5.47,5.46,5.46,5.44,5.44,5.43,5.42,5.39,5.35,5.35,5.33,5.32,5.29,5.27,5.21,5.20,5.23,5.20,5.17,5.16,5.17,5.16,5.14,5.12,5.09,5.09,5.05,5.01,5.01,4.98,4.97,4.97,4.96,4.96,4.93,4.90,4.89,4.88,4.85,4.84,4.82,4.82,4.79,4.77,4.75,4.74,4.74,4.74,4.74,4.73,4.73,4.71,4.71,4.70,4.70,4.69,4.69,4.69,4.69,4.69,4.67,4.67,4.66,4.64,4.64,4.64,4.64,4.63,4.60,4.62,4.60,4.59,4.59,4.56,4.55,4.54,4.54,4.51,4.51,4.51,4.48,4.49,4.48,4.45,4.45,4.44,4.43,4.40,4.38,4.38,4.36,4.35,4.35,4.34,4.34,4.34,4.32,4.31,4.31,4.31,4.29,4.29,4.28,4.27,4.27,4.25,4.24,4.24,4.23,4.20,4.20,4.19,4.19,4.17,4.17,4.17,4.13,4.13,4.12,4.10,4.09,4.09,4.08,4.08,4.04,4.05,4.04,4.04,4.02,4.02,4.02,4.05,4.02,4.01,4.01,4.01,4.00])
Daten2=np.array([1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,12 ,13 ,14 ,15 ,16 ,17 ,18 ,19 ,20 ,21 ,22 ,23 ,24 ,25 ,26 ,27 ,28 ,29 ,30 ,31 ,32 ,33 ,34 ,35 ,36 ,37 ,38 ,39 ,40 ,41 ,42 ,43 ,44 ,45 ,46 ,47 ,48 ,49 ,50 ,51 ,52 ,53 ,54 ,55 ,56 ,57 ,58 ,59 ,60 ,61 ,62 ,63 ,64 ,65 ,66 ,67 ,68 ,69 ,70 ,71 ,72 ,73 ,74 ,75 ,76 ,77 ,78 ,79 ,80 ,81 ,82 ,83 ,84 ,85 ,86 ,87 ,88 ,89 ,90 ,91 ,92 ,93 ,94 ,95 ,96 ,97 ,98 ,99 ,100 ,101 ,102 ,103 ,104 ,105 ,106 ,107 ,108 ,109 ,110 ,111 ,112 ,113 ,114 ,115 ,116 ,117 ,118 ,119 ,120 ,121 ,122 ,123 ,124 ,125 ,126 ,127 ,128 ,129 ,130 ,131 ,132 ,133 ,134 ,135 ,136 ,137 ,138 ,139 ,140 ,141 ,142 ,143 ,144 ,145 ,146 ,147 ,148 ,149 ,150 ,151 ,152 ,153 ,154 ,155 ,156 ,157 ,158 ,159 ,160 ,161 ,162 ,163 ,164 ,165 ,166 ,167 ,168 ,169 ,170 ,171 ,172 ,173 ,174 ,175 ,176 ,177 ,178 ,179 ,180 ,181 ,182 ,183 ,184 ,185 ,186 ,187 ,188 ,189 ,190 ,191 ,192 ,193 ,194 ,195 ,196 ,197 ,198 ,199 ,200 ,201 ,202 ,203 ,204 ,205 ,206 ,207 ,208 ,209 ,210 ,211 ,212 ,213 ,214 ,215 ,216 ,217 ,218 ,219 ,220 ,221 ,222 ,223 ,224 ,225 ,226 ,227 ,228 ,229 ,230 ,231 ,232 ,233 ,234 ,235 ,236 ,237 ,238 ,239 ,240 ,241 ,242 ,243 ,244 ,245 ,246 ,247 ,248 ,249 ,250 ,251 ,252 ,253 ,254 ,255 ,256 ,257 ,258 ,259 ,260 ,261 ,262 ,263 ,264 ,265 ,266 ,267 ,268 ,269 ,270 ,271 ,272 ,273 ,274 ,275 ,276 ,277 ,278 ,279 ,280 ,281 ,282 ,283 ,284 ,285 ,286 ,287 ,288 ,289 ,290 ,291 ,292 ,293 ,294 ,295 ,296 ,297 ,298 ,299 ,300 ,301 ,302 ,303 ,304 ,305 ,306 ,307 ,308 ,309 ,310 ,311 ,312 ,313 ,314 ,315 ,316 ,317 ,318 ,319 ,320 ,321 ,322 ,323 ,324 ,325 ,326 ,327 ,328 ,329 ,330 ,331 ,332 ,333 ,334 ,335 ,336 ,337 ,338 ,339 ,340 ,341 ,342 ,343 ,344 ,345 ,346 ,347 ,348 ,349 ,350 ,351 ,352 ,353 ,354 ,355 ,356 ,357 ,358 ,359 ,360 ,361 ,362 ,363 ,364 ,365 ,366 ,367 ,368 ,369 ,370 ,371 ,372 ,373 ,374 ,375 ,376 ,377 ,378 ,379 ,380 ,381 ,382 ,383 ,384 ,385 ,386 ,387 ,388 ,389 ,390 ,391 ,392 ,393 ,394 ,395 ,396 ,397])
def prozent(prozent, ganz):
    return (prozent*ganz)/100
def erhöhung(k,l):
    e=None
    for n in range(len(k)):
        if (k[n]>k[n-1]) and (l[n]>l[n-1]):
            e=True
        elif (k[n]>k[n-1]) and (l[n]<l[n-1]) or (k[n]<k[n-1]) and (l[n]>l[n-1]):
            e=False
    return e
def konstant(p):
    mittelwert=np.mean(p)
    intervall1=prozent(100-int(abweichung),mittelwert)
    intervall2=prozent(100+int(abweichung),mittelwert)
    for b in range(len(p)):
        if (p[b]>=intervall1) and (p[b]<=intervall2):
            c=True
        else:
            c=False
    return c
plt.plot(Daten2,Daten1)
plt.show()
term = ""
v1 = "a"
v2 = "b"
termstrings = []
n=0
abweichung=input("Abweichung in Prozent")
while c==False:
    if (erhöhung(Daten1,Daten2)==True):
        Daten3=Daten1/Daten2
        termstrings.append("(" + v1 + "/" + v2+ ")")
    if (erhöhung(Daten1,Daten2)==False):
        Daten3=Daten1*Daten2
        termstrings.append("(" + v1 + "*" + v2+ ")")
    c=konstant(Daten3)
    Daten1 = Daten2
    Daten2 = Daten3
    print(Daten3)
    v1 = v2
    v2 = termstrings[n]
    n+=1
print (termstrings[-1])
print(len(Daten1))
sympy.sympify(termstrings[-1])
